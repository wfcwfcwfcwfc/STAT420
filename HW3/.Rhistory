birthday = 19880210
set.seed(birthday)
n = 50
x = seq(0, 10, length = n)
sim_slr = function(x, beta_0 = 10, beta_1 = 5, sigma = 1) {
n = length(x)
epsilon = rnorm(n, mean = 0, sd = sigma)
y = beta_0 + beta_1 * x + epsilon
data.frame(predictor = x, response = y)
}
sim_slr(x = x, beta_0 = -5, beta_1 = 3.25, sigma = 4)
sim_slr = function(x, beta_0 = 10, beta_1 = 5, sigma = 1) {
n = length(x)
epsilon = rnorm(n, mean = 0, sd = sigma)
y = beta_0 + beta_1 * x + epsilon
data.frame(predictor = x, response = y)
}
sim_res <- sim_slr(x = x, beta_0 = -5, beta_1 = 3.25, sigma = 4)
linear_model <- lm(response ~ predictor, data = sim_res)
linear_model
summary(linear_model)
sim_slr = function(x, beta_0 = 10, beta_1 = 5, sigma = 1) {
n = length(x)
epsilon = rnorm(n, mean = 0, sd = sigma)
y = beta_0 + beta_1 * x + epsilon
data.frame(predictor = x, response = y)
}
beta_0_hats <- rep(0, times=2000)
beta_1_hats <- rep(0, times= 2000)
for (i in 1:2000) {
sim_res <- sim_slr(x = x, beta_0 = -5, beta_1 = 3.25, sigma = 4)
linear_model <- lm(response ~ predictor, data = sim_res)
beta_0_hats[i] <- summary(linear_model)$coefficients["(Intercept)", "Estimate"]
beta_1_hats[i] <- summary(linear_model)$coefficients["predictor", "Estimate"]
}
Sxy = sum((x - mean(x)) * (y - mean(y)))
Sxx = sum((x - mean(x)) ^ 2)
beta_0_mean <- mean(beta_0_hats)
beta_1_mean <- mean(beta_1_hats)
beta_0_std <- sd(beta_0_hats)
beta_1_std <- sd(beta_1_hats)
beta_0_std_true <- sqrt(var_beta_1_hat = sigma ^ 2 / Sxx)
sigma = 4
Sxx = sum((x - mean(x)) ^ 2)
beta_0_mean <- mean(beta_0_hats)
beta_1_mean <- mean(beta_1_hats)
beta_0_std <- sd(beta_0_hats)
beta_1_std <- sd(beta_1_hats)
beta_0_std_true <- sqrt(var_beta_1_hat = sigma ^ 2 / Sxx)
sigma = 4
Sxx = sum((x - mean(x)) ^ 2)
beta_0_mean <- mean(beta_0_hats)
beta_1_mean <- mean(beta_1_hats)
beta_0_std <- sd(beta_0_hats)
beta_1_std <- sd(beta_1_hats)
beta_0_std_true <- sqrt(sigma ^ 2 / Sxx)
beta_1_std_true <- sqrt(sigma ^ 2 * (1 / 2000 + mean(x) ^ 2 / Sxx))
sigma = 4
Sxx = sum((x - mean(x)) ^ 2)
beta_0_mean <- mean(beta_0_hats)
beta_1_mean <- mean(beta_1_hats)
beta_0_std <- sd(beta_0_hats)
beta_1_std <- sd(beta_1_hats)
beta_0_std_true <- sqrt(sigma ^ 2 / Sxx)
beta_1_std_true <- sqrt(sigma ^ 2 * (1 / 2000 + mean(x) ^ 2 / Sxx))
beta_0_col <- c(-5, beta_0_mean, beta_0_std_true, beta_0_std)
beta_1_col <- c(3.25, beta_1_mean, beta1_std_true, beta_1_std)
sigma = 4
Sxx = sum((x - mean(x)) ^ 2)
beta_0_mean <- mean(beta_0_hats)
beta_1_mean <- mean(beta_1_hats)
beta_0_std <- sd(beta_0_hats)
beta_1_std <- sd(beta_1_hats)
beta_0_std_true <- sqrt(sigma ^ 2 / Sxx)
beta_1_std_true <- sqrt(sigma ^ 2 * (1 / 2000 + mean(x) ^ 2 / Sxx))
beta_0_col <- c(-5, beta_0_mean, beta_0_std_true, beta_0_std)
beta_1_col <- c(3.25, beta_1_mean, beta_1_std_true, beta_1_std)
summary_df <- data.frame(beta_0_col, beta_1_col)
summary_df
sigma = 4
Sxx = sum((x - mean(x)) ^ 2)
beta_0_mean <- mean(beta_0_hats)
beta_1_mean <- mean(beta_1_hats)
beta_0_std <- sd(beta_0_hats)
beta_1_std <- sd(beta_1_hats)
beta_0_std_true <- sqrt(sigma ^ 2 / Sxx)
beta_1_std_true <- sqrt(sigma ^ 2 * (1 / 2000 + mean(x) ^ 2 / Sxx))
beta_0_col <- c(-5, beta_0_mean, beta_0_std_true, beta_0_std)
beta_1_col <- c(3.25, beta_1_mean, beta_1_std_true, beta_1_std)
summary_df <- data.frame(beta_0_col, beta_1_col)
summary_table <- table(summary_df)
summary_table
sigma = 4
Sxx = sum((x - mean(x)) ^ 2)
beta_0_mean <- mean(beta_0_hats)
beta_1_mean <- mean(beta_1_hats)
beta_0_std <- sd(beta_0_hats)
beta_1_std <- sd(beta_1_hats)
beta_0_std_true <- sqrt(sigma ^ 2 / Sxx)
beta_1_std_true <- sqrt(sigma ^ 2 * (1 / 2000 + mean(x) ^ 2 / Sxx))
beta_0_col <- c(-5, beta_0_mean, beta_0_std_true, beta_0_std)
beta_1_col <- c(3.25, beta_1_mean, beta_1_std_true, beta_1_std)
summary_df <- data.frame(beta_0_col, beta_1_col)
summary_talbe <- table(summary_df$beta_0_col, summary_df$beta_1_col)
summary_talbe
summary_df
sigma = 4
Sxx = sum((x - mean(x)) ^ 2)
beta_0_mean <- mean(beta_0_hats)
beta_1_mean <- mean(beta_1_hats)
beta_0_std <- sd(beta_0_hats)
beta_1_std <- sd(beta_1_hats)
beta_0_std_true <- sqrt(sigma ^ 2 / Sxx)
beta_1_std_true <- sqrt(sigma ^ 2 * (1 / 2000 + mean(x) ^ 2 / Sxx))
beta_0_col <- c(-5, beta_0_mean, beta_0_std_true, beta_0_std)
beta_1_col <- c(3.25, beta_1_mean, beta_1_std_true, beta_1_std)
summary_df <- data.frame(beta_0_col, beta_1_col)
hist(beta_0_hats)
curve(dnorm(x, mean = beta_0_mean, sd = beta_0_std_true),
col = "darkorange", add = TRUE, lwd = 3)
hist(beta_1_hats)
curve(dnorm(x, mean = beta_1_mean, sd = beta_1_std_true),
col = "darkorange", add = TRUE, lwd = 3)
hist(beta_0_hats, prob = TRUE, breaks = 20,
xlab = expression(hat(beta)[1]), main = "", border = "dodgerblue")
curve(dnorm(x, mean = beta_0_mean, sd = beta_0_std_true),
col = "darkorange", add = TRUE, lwd = 3)
hist(beta_1_hats)
curve(dnorm(x, mean = beta_1_mean, sd = beta_1_std_true),
col = "darkorange", add = TRUE, lwd = 3)
hist(beta_0_hats, prob = TRUE, breaks = 20,
xlab = expression(hat(beta)[1]), main = "", border = "dodgerblue")
curve(dnorm(x, mean = beta_0_mean, sd = beta_0_std_true),
col = "darkorange", add = TRUE, lwd = 3)
hist(beta_1_hats, prob = TRUE, breaks = 20,
xlab = expression(hat(beta)[1]), main = "", border = "dodgerblue")
curve(dnorm(x, mean = beta_1_mean, sd = beta_1_std_true),
col = "darkorange", add = TRUE, lwd = 3)
hist(beta_0_hats, prob = TRUE, breaks = 20,
xlab = expression(hat(beta)[0]), main = "", border = "dodgerblue")
curve(dnorm(x, mean = beta_0_mean, sd = beta_0_std_true),
col = "darkorange", add = TRUE, lwd = 3)
hist(beta_1_hats, prob = TRUE, breaks = 20,
xlab = expression(hat(beta)[1]), main = "", border = "dodgerblue")
curve(dnorm(x, mean = beta_1_mean, sd = beta_1_std_true),
col = "darkorange", add = TRUE, lwd = 3)
birthday = 19880210
set.seed(birthday)
n = 25
x = seq(0, 2.5, length = n)
beta_1_hat_seq = rep(0, times=2500)
s_e_seq = rep(0, times = 2500)
for(in in 1:2500) {
beta_1_hat_seq = rep(0, times=2500)
s_e_seq = rep(0, times = 2500)
for(i in 1:2500) {
sim_res <- sim_slr(x = x, beta_0 = 5, beta_1 = 2, sigma = 3)
linear_model <- lm(response ~ predictor, data = sim_res)
beta_1_hat_seq[i] <- summary(linear_model)$coefficients["predictor", "Estimate"]
s_e_seq <- summary(linear_model)$coefficients[""]
}
summary(linear_model)
beta_1_hat_seq = rep(0, times=2500)
s_e_seq = rep(0, times = 2500)
for(i in 1:2500) {
sim_res <- sim_slr(x = x, beta_0 = 5, beta_1 = 2, sigma = 3)
linear_model <- lm(response ~ predictor, data = sim_res)
beta_1_hat_seq[i] <- summary(linear_model)$coefficients["predictor", "Estimate"]
s_e_seq <- summary(linear_model)$coefficients["0.5938"]
}
beta_1_hat_seq = rep(0, times=2500)
s_e_seq = rep(0, times = 2500)
for(i in 1:2500) {
sim_res <- sim_slr(x = x, beta_0 = 5, beta_1 = 2, sigma = 3)
linear_model <- lm(response ~ predictor, data = sim_res)
beta_1_hat_seq[i] <- summary(linear_model)$coefficients["predictor", "Estimate"]
s_e_seq[i] <- summary(linear_model)$coefficients["Std. Error"]
}
beta_1_hat_seq = rep(0, times=2500)
s_e_seq = rep(0, times = 2500)
for(i in 1:2500) {
sim_res <- sim_slr(x = x, beta_0 = 5, beta_1 = 2, sigma = 3)
linear_model <- lm(response ~ predictor, data = sim_res)
beta_1_hat_seq[i] <- summary(linear_model)$coefficients["predictor", "Estimate"]
s_e_seq[i] <- summary(linear_model)$coefficients["predictor", "Std. Error"]
}
crit = qt(0.95, df = 25 - 2)
lower_95 <- beta_1_hat_seq - crit * s_e_seq
upper_95 <- beta_1_hat_seq + crit * s_e_seq
beta_1 <- 2
interfal_df <- data.frame(lower_95, upper_95)
interfal_df
beta_1 <- 2
interval_df <- data.frame(lower_95, upper_95)
internal_df[internal_df$lower_95 <= 2 && interval_df$upper_95 >= 2]
beta_1 <- 2
interval_df <- data.frame(lower_95, upper_95)
interval_df[interval_df$lower_95 <= 2 && interval_df$upper_95 >= 2]
beta_1 <- 2
interval_df <- data.frame(lower_95, upper_95)
count_contain <- length(interval_df[interval_df$lower_95 <= 2 && interval_df$upper_95 >= 2])
count_contain
interval_df[interval_df$lower_95 <= 2 && interval_df$upper_95 >= 2]
beta_1 <- 2
interval_df <- data.frame(lower_95, upper_95)
count_contain <- nrow(interval_df[interval_df$lower_95 <= 2 && interval_df$upper_95 >= 2])
count_contain
interval_df[interval_df$lower_95 <= 2 && interval_df$upper_95 >= 2]
interval_df[interval_df$lower_95 <= 2]
interval_df[interval_df$lower_95 <= 2,]
interval_df[interval_df$lower_95 <= 2 && interval_df$upper_95 >= 2,]
interval_df[(interval_df$lower_95 <= 2) && (interval_df$upper_95 >= 2),]
beta_1 <- 2
interval_df <- data.frame(lower_95, upper_95)
interval_df <- interval_df[interval_df$lower_95 >= 2]
beta_1 <- 2
interval_df <- data.frame(lower_95, upper_95)
interval_df <- interval_df[interval_df$lower_95 >= 2,]
interval_df <- interval_df[interval_df$upper_95 <= 2,]
nrow(interval_df)
beta_1 <- 2
interval_df <- data.frame(lower_95, upper_95)
interval_df <- interval_df[interval_df$lower_95 <= 2,]
interval_df <- interval_df[interval_df$upper_95 >= 2,]
nrow(interval_df)
2243/2500
nrow(interval_df)/2500
crit = qt(0.99, df = 25 - 2)
lower_99 <- beta_1_hat_seq - crit * s_e_seq
upper_99 <- beta_1_hat_seq + crit * s_e_seq
interval_df <- data.frame(lower_99, upper_99)
interval_df <- interval_df[interval_df$lower_99 <= 2,]
interval_df <- interval_df[interval_df$upper_99 >= 2,]
nrow(interval_df)/2500
View(ozone_model)
ozone_model$model
resid(calc_pred_int = function (model, newdata, level = 0.95) {
n = nrow(model$model);
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = coef(model)[[2]];
beta_hat_0 = coef(model)[[1]];
y_hat = beta_hat_0 + beta_hat_1 * x;
e = y - y_hat;
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = sqrt(sum(e^2) / (n-2))
Sxx = sum((x - x_bar)^2);
pred = se * sqrt(1 + ( 1/length(x) )  + ( (newdata[[1]] - x_bar)^2 / Sxx ) );
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
})
resid(ozone_model)
nrow(resid(ozone_model))
length(resid(ozone_model))
nrow(ozone_model$model)
ozone_model$model[,2]
as.vector(ozone_model$model[,2]);
resid(ozone_model)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = coef(model)[[2]];
beta_hat_0 = coef(model)[[1]];
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = sqrt(sum(e^2) / (n-2))
Sxx = sum((x - x_bar)^2);
pred = se * sqrt(1 + ( 1/length(x) )  + ( (newdata[[1]] - x_bar)^2 / Sxx ) );
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
newcat_2 = data.frame(Bwt = 3.3)
calc_pred_int(cat_model, newcat_2, level = 0.90)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = coef(model)[[2]];
beta_hat_0 = coef(model)[[1]];
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(linear_model)$coefficients[2, "Std. Error"]
Sxx = sum((x - x_bar)^2);
pred = se * sqrt(1 + ( 1/length(x) )  + ( (newdata[[1]] - x_bar)^2 / Sxx ) );
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = summary(model)$coefficients[2, 3]
beta_hat_0 = summary(model)$coefficients[1, 3]
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(model)$coefficients[2, "Std. Error"]
Sxx = sum((x - mean(x)) ^ 2)
pred = se * sqrt(1 + (1/length(x)) + ((newdata[[1]] - x_bar)^2 / Sxx));
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
newcat_2 = data.frame(Bwt = 3.3)
calc_pred_int(cat_model, newcat_2, level = 0.90)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = summary(model)$coefficients[2, 3]
beta_hat_0 = summary(model)$coefficients[1, 3]
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(model)$coefficients[2, "Std. Error"]
Sxx = sum((x - mean(x)) ^ 2)
pred = se * sqrt(1 + (1/length(x)) + ((newdata[[1]] - x_bar)^2 / Sxx));
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
calc_pred_int = function (model, newdata, level = 0.95) {
n = nrow(model$model);
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = coef(model)[[2]];
beta_hat_0 = coef(model)[[1]];
y_hat = beta_hat_0 + beta_hat_1 * x;
e = y - y_hat;
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = sqrt(sum(e^2) / (n-2))
Sxx = sum((x - x_bar)^2);
pred = se * sqrt(1 + ( 1/length(x) )  + ( (newdata[[1]] - x_bar)^2 / Sxx ) );
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
newcat_2 = data.frame(Bwt = 3.3)
calc_pred_int(cat_model, newcat_2, level = 0.90)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = summary(model)$coefficients[2, 3]
beta_hat_0 = summary(model)$coefficients[1, 3]
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(model)$coefficients[2, "Std. Error"]
Sxx = sum((x - mean(x)) ^ 2)
pred = se * sqrt(1 + (1/length(x)) + ((newdata[[1]] - x_bar)^2 / Sxx));
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
newcat_2 = data.frame(Bwt = 3.3)
calc_pred_int(cat_model, newcat_2, level = 0.90)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = summary(model)$coefficients[2, 3]
beta_hat_0 = summary(model)$coefficients[1, 3]
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(model)$coefficients[2, "Std. Error"]
Sxx = sum((x - mean(x)) ^ 2)
pred = se * sqrt(1 + (1/length(x)) + ((newdata[[1]] - x_bar)^2 / Sxx));
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
calc_pred_int = function (model, newdata, level = 0.95) {
n = nrow(model$model);
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = summary(model)$coefficients[2, 3]
beta_hat_0 = summary(model)$coefficients[1, 3]
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = sqrt(sum(e^2) / (n-2))
Sxx = sum((x - x_bar)^2);
pred = se * sqrt(1 + ( 1/length(x) )  + ( (newdata[[1]] - x_bar)^2 / Sxx ) );
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = summary(model)$coefficients[2, 3]
beta_hat_0 = summary(model)$coefficients[1, 3]
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(model)$coefficients[2, "Std. Error"]
Sxx = sum((x - mean(x)) ^ 2)
pred = se * sqrt(1 + (1/length(x)) + ((newdata[[1]] - x_bar)^2 / Sxx));
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
calc_pred_int = function (model, newdata, level = 0.95) {
n = nrow(model$model);
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = coef(model)[[2]];
beta_hat_0 = coef(model)[[1]];
y_hat = beta_hat_0 + beta_hat_1 * x;
e = y - y_hat;
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = sqrt(sum(e^2) / (n-2))
Sxx = sum((x - x_bar)^2);
pred = se * sqrt(1 + ( 1/length(x) )  + ( (newdata[[1]] - x_bar)^2 / Sxx ) );
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
beta_hat_1 = summary(model)$coefficients[2, 3]
beta_hat_0 = summary(model)$coefficients[1, 3]
y_hat = beta_hat_0 + beta_hat_1 * x;
e = y - y_hat;
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(model)$coefficients[2, "Std. Error"]
Sxx = sum((x - mean(x)) ^ 2)
pred = se * sqrt(1 + (1/length(x)) + ((newdata[[1]] - x_bar)^2 / Sxx));
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = summary(model)$coefficients[2, 3]
beta_hat_0 = summary(model)$coefficients[1, 3]
y_hat = beta_hat_0 + beta_hat_1 * x;
e = y - y_hat;
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(model)$coefficients[2, "Std. Error"]
Sxx = sum((x - mean(x)) ^ 2)
pred = se * sqrt(1 + (1/length(x)) + ((newdata[[1]] - x_bar)^2 / Sxx));
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
calc_pred_int <- function (model, newdata, level = 0.95) {
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
beta_hat_1 = coef(model)[[2]];
beta_hat_0 = coef(model)[[1]];
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(model)$coefficients[2, "Std. Error"]
Sxx = sum((x - mean(x)) ^ 2)
pred = se * sqrt(1 + (1/length(x)) + ((newdata[[1]] - x_bar)^2 / Sxx));
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
newcat_2 = data.frame(Bwt = 3.3)
calc_pred_int(cat_model, newcat_2, level = 0.90)
summary(ozone)$coefficient
summary(ozone)$coefficients
calc_pred_int <- function (model, newdata, level = 0.95) {
beta_hat_1 = coef(model)[[2]];
beta_hat_0 = coef(model)[[1]];
y_hat = beta_hat_0 + beta_hat_1 * x;
e = resid(model);
n = length(resid(model));
x = as.vector(model$model[,2]);
y = as.vector(model$model[,1]);
x_bar = mean(x);
estimate = beta_hat_0 + beta_hat_1 * newdata[[1]];
se = summary(model)$coefficients[2, "Std. Error"]
Sxx = sum((x - mean(x)) ^ 2)
pred = se * sqrt(1 + (1/length(x)) + ((newdata[[1]] - x_bar)^2 / Sxx));
c("estimate" = estimate, "lower" = estimate - pred, "upper" = estimate + pred);
}
data(Ozone, package = "mlbench")
Ozone = Ozone[, c(4, 6, 7, 8)]
colnames(Ozone) = c("ozone", "wind", "humidity", "temp")
Ozone = Ozone[complete.cases(Ozone), ]
ozone_wind_model <- lm(ozone ~ wind, data = Ozone)
summary(ozone_model)
ozone_wind_model <- lm(ozone ~ wind, data = Ozone)
summary(ozone_model)
